version: '3'

set: [ e, u, x, pipefail ]

env:
  COMMIT_SHA:
    sh: git rev-parse HEAD

tasks:
  default:
    cmd:
      task: up

  setup:
    desc: Initial setup
    cmds:
      - pip install -U pre-commit
      - pre-commit install
      - cd api && uv sync && cd ..
      - cd ui && bun install && cd ..

  up:
    desc: Build and start Docker containers
    cmd: infisical run -- docker compose up --detach --build --remove-orphans {{.CLI_ARGS}}

  logs:
    desc: Attach to Docker logs
    cmd: docker compose logs --follow {{.CLI_ARGS}}

  stop:
    desc: Stop containers
    cmd: docker compose stop {{.CLI_ARGS}}

  restart:
    desc: Restart containers
    cmd: docker compose restart {{.CLI_ARGS}}

  exec:
    desc: Run a command in the specified container
    cmd: docker compose exec -- {{.CLI_ARGS}}

  down:
    desc: Remove containers
    cmd: docker compose down --remove-orphans {{.CLI_ARGS}}

  clean:
    desc: Nuke everything
    cmd: docker compose down -v --remove-orphans {{.CLI_ARGS}}

  tf-init:
    desc: Initialize Terraform
    dir: infra/terraform
    cmd: >
      infisical run -- /bin/bash -euxo pipefail -c '
      terraform init
      -backend-config "container_name=${TF_VAR_container_name}"
      -backend-config "resource_group_name=${TF_VAR_resource_group_name}"
      -backend-config "storage_account_name=${TF_VAR_storage_account_name}"
      '

  tf-plan:
    desc: Plan Terraform changes
    dir: infra/terraform
    cmd: infisical run -- terraform plan -out=.tfplan

  tf-apply:
    desc: Apply Terraform changes
    dir: infra/terraform
    cmd: infisical run -- terraform apply .tfplan

  tf-output:
    desc: Print Terraform output
    dir: infra/terraform
    cmd: infisical run -- terraform output -json
