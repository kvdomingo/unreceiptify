version: '3'

env:
  NAME: unreceiptify
  COMMIT_SHA:
    sh: git rev-parse HEAD

vars: { }

dotenv:
  - ./api/.env

tasks:
  default:
    cmd:
      task: up

  up:
    desc: Build and start Docker containers
    cmd: docker compose --project-name {{.NAME}} up --detach --build --remove-orphans {{.CLI_ARGS}}

  logs:
    desc: Attach to Docker logs
    cmd: docker compose --project-name {{.NAME}} logs --follow {{.CLI_ARGS}}

  stop:
    desc: Stop containers
    cmd: docker compose --project-name {{.NAME}} stop {{.CLI_ARGS}}

  restart:
    desc: Restart containers
    cmd: docker compose --project-name {{.NAME}} restart {{.CLI_ARGS}}

  exec:
    desc: Run a command in the specified container
    cmd: docker compose --project-name {{.NAME}} exec -- {{.CLI_ARGS}}

  down:
    desc: Remove containers
    cmd: docker compose --project-name {{.NAME}} down --remove-orphans {{.CLI_ARGS}}

  clean:
    desc: Nuke everything
    cmd: docker compose --project-name {{.NAME}} down -v --remove-orphans {{.CLI_ARGS}}

  tf-init:
    desc: Initialize Terraform
    dir: infra/terraform
    cmd: terraform init -backend-config=gcs.tfbackend

  tf-plan:
    desc: Plan Terraform changes
    dir: infra/terraform
    cmd: terraform plan -out=.tfplan

  tf-apply:
    desc: Apply Terraform changes
    dir: infra/terraform
    cmd: terraform apply .tfplan

  tf-output:
    desc: Print Terraform output
    dir: infra/terraform
    cmd: terraform output -json

  requirements:
    desc: Generate requirements.txt
    dir: api
    cmd: poetry export -f requirements.txt --without-hashes --without dev -o requirements.txt
